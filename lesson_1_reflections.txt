How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    As we are comparing with two versions of the file using diff, we are
    getting the line we have changed and based on that we are getting hint
    about the problem lies in those lines.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    When we compare with previous history, we can track easily what changes we
    have done exactly to add new things or features.Also we can easily find
    the changes done by others in the same code base.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   Pros of mannual choosing
      - We have a logical point where we are adding changes, so that we can
        track over code we added according to featire basis.
      -  
   Cons of mannual choosing
      - If we dont commit for long time chances of loosing data is more
      - 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    - Saving multiple file gives us a logical point of implementing a
      feature.
    - Suppose we have implemented a feature then a group of files is changes
      in that and it acts a tag for all the files in that commit.

How can you use the commands git log and git diff to view the history of files?

    - git log shows all the commits we have did with message, commit id,
      authour, time wrt to its commit.
    - git log -stats will show the each commit in details like line we have
      added, removed in each commit.

How might using version control make you more confident to make changes that
could break something?
 
    - If we coded to break something and we are unable to find out what bug we
      have introduced then we have git checkout to go to a specific commit by
      detaching head and after finding we can again come back to latest commit
      version.

Now that you have your workspace set up, what do you want to try using Git for?

   Git we can use to save codes in repository, so that we can add new files, commit
   new changes and diff with previous commits.
